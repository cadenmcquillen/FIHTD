data <- load("Simulated_metabolomics_data_preprocessed.Rdata")
View(dat)
View(annotations)
BiocManager::install("safe")
BiocManager::install("safe")
a
exit
รง
รง
BiocManager::install("safe")
library(tidyverse)
library(safe)
BiocManager::install("safe")
library(tidyverse)
library(safe)
install.packages("DBI")
install.packages("DBI")
BiocManager::install("safe")
library(tidyverse)
library(safe)
data <- load("geod33272.rda")
num_kegg_pathways <- length(kegg)
print(paste0("The total number of pathways: ", num_kegg_pathways))
TCA_cycle_genes <- kegg$`hsa00020 Citrate cycle (TCA cycle)`
num_TCA_cycle_genes <- length(TCA_cycle_genes)
print(paste0("The total number of genes in TCA cycle pathway: " , num_TCA_cycle_genes))
#create Gene by Pathway matrix (Genes are columns, Pathway are rows)
Genes_Pathway_Matrix <- matrix(nrow = length(kegg), ncol = length(geod33272$ID$entrezID))
colnames(Genes_Pathway_Matrix) <- geod33272$ID$entrezID
rownames(Genes_Pathway_Matrix) <- names(kegg)
for (i in 1:length(kegg)){
currentPathway <- unlist(kegg[i])
genes <- geod33272$ID$entrezID  %in%  currentPathway
Genes_Pathway_Matrix[i,]  <- genes
}
#log2 gene expression matrix
gene_expression_matrix <- log2(geod33272$x)
rownames(gene_expression_matrix) <- geod33272$ID$entrezID
#activation status vector
activation_status <- geod33272$status
#Number of tests
num_tests<- length(gene_expression_matrix[,1])
#Target p value
p <- 0.05/num_tests
#Number of permutations needed for target p value
num_permutations <- 10*(1/p)
diff_exp <- safe(X.mat = gene_expression_matrix, y.vec = activation_status, C.mat = t(Genes_Pathway_Matrix),  Pi.mat = num_permutations, error = "FWER.Bonf")
# top 10
top10 <- safe.toptable(diff_exp,number = 10, pretty = TRUE, description = FALSE)
safe_dat <- load("Safe.Rdata")
# top 10
top10 <- safe.toptable(diff_exp,number = 10, pretty = TRUE, description = FALSE)
print(top10)
View(diff_exp)
BiocManager::install("safe")
library(tidyverse)
library(safe)
data <- load("geod33272.rda")
num_kegg_pathways <- length(kegg)
print(paste0("The total number of pathways: ", num_kegg_pathways))
TCA_cycle_genes <- kegg$`hsa00020 Citrate cycle (TCA cycle)`
num_TCA_cycle_genes <- length(TCA_cycle_genes)
print(paste0("The total number of genes in TCA cycle pathway: " , num_TCA_cycle_genes))
data <- load("geod33272.rda")
num_kegg_pathways <- length(kegg)
print(paste0("The total number of pathways: ", num_kegg_pathways))
TCA_cycle_genes <- kegg$`hsa00020 Citrate cycle (TCA cycle)`
num_TCA_cycle_genes <- length(TCA_cycle_genes)
print(paste0("The total number of genes in TCA cycle pathway: " , num_TCA_cycle_genes))
# create Gene by Pathway matrix (Genes are columns, Pathway are rows)
Genes_Pathway_Matrix <- matrix(nrow = length(kegg), ncol = length(geod33272$ID$entrezID))
colnames(Genes_Pathway_Matrix) <- geod33272$ID$entrezID
rownames(Genes_Pathway_Matrix) <- names(kegg)
for (i in 1:length(kegg)){
currentPathway <- unlist(kegg[i])
genes <- geod33272$ID$entrezID  %in%  currentPathway
Genes_Pathway_Matrix[i,]  <- genes
}
safe_dat <- load("Safe.Rdata")
# top 10
top10 <- safe.toptable(diff_exp,number = 10, pretty = TRUE, description = FALSE)
print(top10)
# plot
safeplot(safe=diff_exp,  cat.name = "hsa03440 Homologous recombination")
# Takes forever to run safe, so just load the results instead of rerunning
save(gene_expression_matrix, activation_status, num_tests, p, num_permutations, diff_exp, top10, file = "Safe.Rdata")
# plot
safeplot(safe=diff_exp,  cat.name = "hsa03440 Homologous recombination")
# Takes forever to run safe, so just load the results instead of rerunning
save(gene_expression_matrix, activation_status, num_tests, p, num_permutations, diff_exp, top10, file = "Safe.Rdata")
